/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

/**
       * Work around a Firefox/IE bug where the transparent `button` background
       * results in a loss of the default `button` focus styles.
       */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
       * 1. Use the user's configured `sans` font-family (with Tailwind's default
       *    sans-serif font stack as a fallback) as a sane default.
       * 2. Use Tailwind's default "normal" line-height so the user isn't forced
       *    to override it to ensure consistency even when using the default theme.
       */
html {
  font-family: inter;
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
       * Inherit font-family and line-height from `html` so users can set them as
       * a class directly on the `html` element.
       */
body {
  font-family: inherit;
  line-height: inherit;
  margin: 0;
  min-height: 100vh;
  color: #18181b;
}

/**
       * 1. Prevent padding and border from affecting element width.
       *
       *    We used to set this in the html element and inherit from
       *    the parent element for everything else. This caused issues
       *    in shadow-dom-enhanced elements like <details> where the content
       *    is wrapped by a div with box-sizing set to `content-box`.
       *
       *    https://github.com/mozdevs/cssremedy/issues/4
       *
       *
       * 2. Allow adding a border to an element by just adding a border-width.
       *
       *    By default, the way the browser specifies that an element should have no
       *    border is by setting it's border-style to `none` in the user-agent
       *    stylesheet.
       *
       *    In order to easily add borders to elements by just setting the `border-width`
       *    property, we change the default border-style for all elements to `solid`, and
       *    use border-width to hide them instead. This way our `border` utilities only
       *    need to set the `border-width` property instead of the entire `border`
       *    shorthand, making our border utilities much more straightforward to compose.
       *
       *    https://github.com/tailwindcss/tailwindcss/pull/116
       */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #d4d4d8;
  /* 2 */
}

/*
       * Ensure horizontal rules are visible by default
       */
hr {
  border-top-width: 1px;
  border-color: #d4d4d8;
}

/**
       * Undo the `border-style: none` reset that Normalize applies to images so that
       * our `border-{width}` utilities have the expected effect.
       *
       * The Normalize reset is unnecessary for us since we default the border-width
       * to 0 on all elements.
       *
       * https://github.com/tailwindcss/tailwindcss/issues/362
       */
img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #a1a1aa;
}

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #a1a1aa;
}

input::-ms-input-placeholder,
textarea::-ms-input-placeholder {
  color: #a1a1aa;
}

input::placeholder,
textarea::placeholder {
  color: #a1a1aa;
}

button,
[role='button'],
input[type='submit'] {
  cursor: pointer;
  font-family: inter;
  -webkit-transition: all 150ms ease-in-out;
  transition: all 150ms ease-in-out;
}

button:focus:not([data-focus-visible-added]) {
  outline: none;
}

button:disabled,
button[disabled],
[role='button']:disabled,
[role='button'][disabled],
input:disabled,
input[disabled] {
  opacity: 0.5;
  cursor: default;
  pointer-events: none;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
       * Reset links to optimize for opt-in styling instead of
       * opt-out.
       */
a {
  text-decoration: inherit;
  color: inherit;
}

/**
       * Reset form element properties that are easy to forget to
       * style explicitly so you don't inadvertently introduce
       * styles that deviate from your design system. These styles
       * supplement a partial reset that is already applied by
       * normalize.css.
       */
button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

input,
textarea {
  font-family: inter;
  /* 1 */
}

/**
       * Use the configured 'mono' font family for elements that
       * are expected to be rendered with a monospace font, falling
       * back to the system monospace stack if there is no configured
       * 'mono' font family.
       */
pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
}

/**
       * Make replaced elements `display: block` by default as that's
       * the behavior you want almost all of the time. Inspired by
       * CSS Remedy, with `svg` added as well.
       *
       * https://github.com/mozdevs/cssremedy/issues/14
       */
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
}

/**
       * Constrain images and videos to the parent width and preserve
       * their instrinsic aspect ratio.
       *
       * https://github.com/mozdevs/cssremedy/issues/14
       */
img,
video {
  max-width: 100%;
  height: auto;
}

.bg-gray-900 {
  background-color: #18181b;
}

.bg-primary {
  background-color: #f42;
}

.bg-primary-light {
  background-color: #ffebe7;
}

.bg-gray-999 {
  background-color: #333;
}

.bg-gray-1000 {
  background-color: #131313;
}

.bg-gray-1100 {
  background-color: #000;
}

.card__featured {
  position: relative;
}

.card__link {
  z-index: 10;
}

.card__meta-container {
  position: absolute;
  bottom: 0;
  left: 0;
}

.card__featured-category,
.card__featured-title {
  color: #fff;
}

.card__featured-category {
  font-weight: 600;
  text-transform: uppercase;
  font-size: 12px;
  letter-spacing: 0.0375em;
}

.card__featured-title {
  font-weight: 800;
  font-size: 18px;
}

.card__featured-meta {
  color: #d4d4d8;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-size: 12px;
  margin-top: 4px;
  font-weight: 500;
}

.card__featured-meta > * + * {
  margin-left: 8px;
}

.card__featured__date {
  position: absolute;
  top: 0;
  right: 0;
  font-size: 14px;
  color: #fff;
}

.card__meta-container,
.card__featured__date {
  padding: 12px;
}

.card__overlay {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), color-stop(20%, rgba(5, 4, 4, 0.6)), to(black));
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.4) 0%, rgba(5, 4, 4, 0.6) 20%, black 100%);
  -webkit-transition: all 150ms ease-in-out;
  transition: all 150ms ease-in-out;
}

.card__overlay--primary {
  background: linear-gradient(331deg, rgba(0, 0, 0, 0.4) 0%, rgba(5, 4, 4, 0.7) 29%, rgba(255, 60, 50, 0.9) 100%);
}

.card__featured:hover .card__overlay {
  opacity: 0.95;
}

.card__featured-box {
  width: 100%;
}

.card__link,
.featured__box {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

.featured__img-logo {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  padding: 16px;
}

.featured__box {
  background-repeat: no-repeat;
}

/** card in 2 horizontal */
.card__horizontal-in-2 {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.card__horizontal-in-2 > * + * {
  margin-left: 12px;
}

.card__horizontal-in-2__img {
  -ms-flex-negative: 0;
      flex-shrink: 0;
}

.card__horizontal-in-2__img > img {
  width: 80px;
  height: 80px;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  -o-object-fit: cover;
     object-fit: cover;
}

.card__horizontal-in-2__title {
  display: block;
  font-size: 14px;
  font-weight: 700;
  line-height: 20px;
}

.card__horizontal-in-2__title:hover {
  color: #f42;
}

.card__horizontal-in-2__footer {
  font-size: 12px;
  color: #71717a;
  margin-top: 4px;
}

.card__horizontal-in-2__footer > * + * {
  margin-left: 8px;
}

@media only screen and (min-width: 768px) {
  .card__featured-title--scalable {
    font-size: 24px;
    line-height: 32px;
  }
  .card__horizontal-in-2 {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .card__horizontal-in-2 > * + * {
    margin-left: 0;
  }
  .card__horizontal-in-2__title {
    font-size: 15px;
    margin-top: 6px;
  }
  .card__horizontal-in-2__img > img {
    width: 100%;
    height: 100%;
  }
}

@media only screen and (min-width: 1024px) {
  .card__featured-title--scalable {
    font-size: 48px;
    line-height: 56px;
  }
  .card__featured-title--scalable--sm {
    font-size: 24px;
  }
  .card__meta-container {
    padding: 16px;
  }
}

.advert__header-main {
  position: relative;
}

.advert__image {
  height: 64px;
  width: 64px;
  position: absolute;
  top: 0;
  left: 0;
  margin-left: 12px;
  -webkit-transform: translateY(25%);
          transform: translateY(25%);
}

.advert__header {
  margin-left: 88px;
}
/*# sourceMappingURL=app.css.map */